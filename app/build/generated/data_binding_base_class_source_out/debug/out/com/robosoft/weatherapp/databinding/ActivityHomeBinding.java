// Generated by view binder compiler. Do not edit!
package com.robosoft.weatherapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.navigation.NavigationView;
import com.robosoft.weatherapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final TextView addFavTv;

  @NonNull
  public final LinearLayout addFvLinear;

  @NonNull
  public final TextView cTv;

  @NonNull
  public final TextView celValueTv;

  @NonNull
  public final LinearLayout cfTv;

  @NonNull
  public final TextView dateTimeTv;

  @NonNull
  public final LinearLayout degreeLinear;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final TextView fTv;

  @NonNull
  public final MaterialCheckBox favClicked;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final TextView humidityTv;

  @NonNull
  public final TextView locationTv;

  @NonNull
  public final TextView minmaxTv;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final TextView sunnyTxt;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final ImageView weatherImg;

  @NonNull
  public final TextView windTv;

  private ActivityHomeBinding(@NonNull DrawerLayout rootView, @NonNull TextView addFavTv,
      @NonNull LinearLayout addFvLinear, @NonNull TextView cTv, @NonNull TextView celValueTv,
      @NonNull LinearLayout cfTv, @NonNull TextView dateTimeTv, @NonNull LinearLayout degreeLinear,
      @NonNull DrawerLayout drawerLayout, @NonNull TextView fTv,
      @NonNull MaterialCheckBox favClicked, @Nullable HorizontalScrollView horizontalScrollView,
      @NonNull TextView humidityTv, @NonNull TextView locationTv, @NonNull TextView minmaxTv,
      @NonNull NavigationView navView, @NonNull TextView sunnyTxt, @NonNull Toolbar toolbar,
      @NonNull ImageView weatherImg, @NonNull TextView windTv) {
    this.rootView = rootView;
    this.addFavTv = addFavTv;
    this.addFvLinear = addFvLinear;
    this.cTv = cTv;
    this.celValueTv = celValueTv;
    this.cfTv = cfTv;
    this.dateTimeTv = dateTimeTv;
    this.degreeLinear = degreeLinear;
    this.drawerLayout = drawerLayout;
    this.fTv = fTv;
    this.favClicked = favClicked;
    this.horizontalScrollView = horizontalScrollView;
    this.humidityTv = humidityTv;
    this.locationTv = locationTv;
    this.minmaxTv = minmaxTv;
    this.navView = navView;
    this.sunnyTxt = sunnyTxt;
    this.toolbar = toolbar;
    this.weatherImg = weatherImg;
    this.windTv = windTv;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addFavTv;
      TextView addFavTv = ViewBindings.findChildViewById(rootView, id);
      if (addFavTv == null) {
        break missingId;
      }

      id = R.id.addFvLinear;
      LinearLayout addFvLinear = ViewBindings.findChildViewById(rootView, id);
      if (addFvLinear == null) {
        break missingId;
      }

      id = R.id.cTv;
      TextView cTv = ViewBindings.findChildViewById(rootView, id);
      if (cTv == null) {
        break missingId;
      }

      id = R.id.celValueTv;
      TextView celValueTv = ViewBindings.findChildViewById(rootView, id);
      if (celValueTv == null) {
        break missingId;
      }

      id = R.id.cfTv;
      LinearLayout cfTv = ViewBindings.findChildViewById(rootView, id);
      if (cfTv == null) {
        break missingId;
      }

      id = R.id.dateTimeTv;
      TextView dateTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeTv == null) {
        break missingId;
      }

      id = R.id.degreeLinear;
      LinearLayout degreeLinear = ViewBindings.findChildViewById(rootView, id);
      if (degreeLinear == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.fTv;
      TextView fTv = ViewBindings.findChildViewById(rootView, id);
      if (fTv == null) {
        break missingId;
      }

      id = R.id.favClicked;
      MaterialCheckBox favClicked = ViewBindings.findChildViewById(rootView, id);
      if (favClicked == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);

      id = R.id.humidityTv;
      TextView humidityTv = ViewBindings.findChildViewById(rootView, id);
      if (humidityTv == null) {
        break missingId;
      }

      id = R.id.locationTv;
      TextView locationTv = ViewBindings.findChildViewById(rootView, id);
      if (locationTv == null) {
        break missingId;
      }

      id = R.id.minmaxTv;
      TextView minmaxTv = ViewBindings.findChildViewById(rootView, id);
      if (minmaxTv == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.sunny_txt;
      TextView sunnyTxt = ViewBindings.findChildViewById(rootView, id);
      if (sunnyTxt == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.weatherImg;
      ImageView weatherImg = ViewBindings.findChildViewById(rootView, id);
      if (weatherImg == null) {
        break missingId;
      }

      id = R.id.windTv;
      TextView windTv = ViewBindings.findChildViewById(rootView, id);
      if (windTv == null) {
        break missingId;
      }

      return new ActivityHomeBinding((DrawerLayout) rootView, addFavTv, addFvLinear, cTv,
          celValueTv, cfTv, dateTimeTv, degreeLinear, drawerLayout, fTv, favClicked,
          horizontalScrollView, humidityTv, locationTv, minmaxTv, navView, sunnyTxt, toolbar,
          weatherImg, windTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
